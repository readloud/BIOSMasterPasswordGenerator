CMOSSave 4.7 build: 9520 released: 2012-11-25

Restores corrupted CMOS from backup.

Copyright: (c) 2014 Canadian Mind Products.

asm command line utility.
Download from: http://mindprod.com/products4.html#CMOSSAVE
View formatted HTML Manual online at: http://mindprod.com/utility/cmossave.manual.html

----

Notes:

This program can only be used from the command prompt, (or via an command
line style icon shortcut) e.g. under Windows command.exe or JPSoft
tcmd.exe, formerly called the DOS box. Just clicking the programs in a
directory listing will not do anything useful. Just typing the program
names at the command prompt will not either.

This program requires a manual install! See below.

This program works with vanilla text files, (e.g. ASCII files or UTF-8
Unicode files). You will need a text editor to create and view them, not a word
processor. e.g. notepad, Visual Slick Edit or other suitable text editor
http://mindprod.com/jgloss/editor.html. You must use a monospaced font
http://mindprod.com/jgloss/monospacedfonts.html (aka fixed pitch, aka
programmer font) to view your files, or they won't look properly aligned.

I put out an avalanche of free software into the world, and submit PAD
files to hundreds of distribution sites, but I rarely hear back from
anyone.  What's happening?  Does it all just work fine?  It is so
complicated nobody can figure out how to use it and they give up on it?
It is it useful?  Since everyone has the source, do people just fix the
programs to their liking themselves?  Did you have trouble installing?  Do
I presume you know too much?  I would be happy to hear from you about your
experiences, positive or negative and your requests for improvements.  A
one-line email to roedy@mindprod.com would be great.

===> Free <===
Full source included.
You may even include the source code, modified or unmodified
in free/commercial open source/proprietary programs that you write and distribute.
May be used freely for any purpose but military.
For more details on this restriction, see
http://mindprod.com/contact/nonmil.html
If you include any Canadian Mind Products code in your own applications,
your app too must be labelled non-military use only.
http://mindprod.com/contact/nonmil.html
All ASM source and EXE files code are included.

----

Prerequisites:

This program runs under Microsoft Windows or DOS only (e.g. Win2K/XP/Vista) in a DOS compatibility box).

----

Installing on a PC:

Download source and executable files to run on your own machine as a standalone utility.
To install, extract the zip download with WinZip
(or similar unzip utility) into any directory you please,
often J:\ --  ticking off the <span class="click">use folder names</span> option.

----

Installing on a MacIntosh:

This assembler program will not run on a Mac.

----

Rebuilding:

The zip already contains the necessary exe, so unless you modify
the program, there is no need to recompile the source or re-assemble it..
Configure.java basedir="E:/" in rebuild.xml to the drive where your files are and tweak rebuild.xml.
Use ANT and rebuild.xml, not build.xml, to reassemble and link.

----

Use:

CMOSSave CMOSRest CMOSChk restore corrupted CMOS from backup and check
that CMOS has not been tampered with.  Featured in Karen Kenworthy's
Windows Magazine column October 1994 and April 1995, and Fred Langa's in
1999.  It has also been bundled on the CDs that come with various books.

Note: progam is called CMOSsave (double s) not cmosave.

Naive users sometimes meddle with CMOS settings.  We need a fast way to
put the scores of subtle CMOS configuration settings back the way they
were.

Power surges can corrupt CMOS.  We need a way for a naive user to quickly
restore all the CMOS settings, (at least the first 128 bytes worth).

If the battery fails, the contents will be lost.  We need a way to restore
a known working CMOS configuration.

CMOSRest restores ALL of CMOS, including the proprietary extended COMS
settings like wait states, clock speeds, shadow RAM etc.  It does not
handle the proprietary extended cmos.

CMOSRest can also be used to toggle between two CMOS configurations, for
example with and without a removable hard drive installed.

CMOSChk can detect subtle corruption to CMOS, as might be caused by a
rogue program or a virus, something that might slow your machine or make
it unreliable.

The CMOS suite will work under DOS, Windows 3.x, Windows 95/98/ME or OS/2.
It partly works under NT, Windows 2000 and XP, Vista and Windows 7.  see
comossave.manual.html for details.  However, these utilities are intended
to be used mainly within autoexec.bat during the DOS phase of the boot.
Further, there will be spurious CMOS changes when you reboot between Win95
and NT.

Why the computer chip icon?  It represents the CMOS chip on your
motherboard where the BIOS settings are stored.


----

Version History:

 1.0 1991-09-07 released to BIX

 1.1 1991-09-18 released to BIX
                added special check for small 64 character CMOSes.

 1.2 1991-09-19 fix spelling errors
                use CMOS.SAV instead of MyCMOS.SAV in examples

 1.3 1991-09-20 now consider fewer bytes volatile, restore more stuff.
                hints in docs about clearing CMOS.

 1.4 1991-09-21 now consider flags Status register C, offset 0C as volatile.
                fixes false alarms.

 1.5 1994-06-01 change of address and phone number
                address now appears in the banner.

 1.6 1994-08-29 more information about how CMOS bits are used.

 2.0 1994-10-01 easier configuration of CHKCMOS volatile bytes.
                smarter bat files.
                docs on different ways to use.

 2.2 1995-04-16 docs on use before experimentation

 2.3 1995-07-24 add 3F as volatile byte.  PCI Pentiums are volatile.

 2.4 1995-08-07 add /Q switch to suppress banners, only complain
                presume installation done to C:\CMP and that files saved there too.

 2.5 1996-01-27 better documentation

 2.6 1996-06-03 better documentation. Win 95 explanations.

 2.7 1996-08-19 treat hex 3F differently in CMOSRest and CMOSChk

 2.8 1996-10-23 POB in Quathiaski address.  Back to C:\SAFE as presumed directory
                lower cost $10, combined site licence.

 2.9 1996-11-12 fix missing com files.

 3.0 1997-07-08 notes on Y2K checking
                notes on separate rescue diskettes.

 3.1 1998-10-23 new address
                Win98 ok note.

 3.2 1998-11-07 slight changes to visuals to conform with standard.
                embed Barker address

 3.3 1999-10-04 document problems with NT
                CMOSREST now does a read to verify that the restore succeeded.

 3.4 2000-05-10 also treat byte 38 as volatile.

 3.5 2001-01-05 also treat byte 30 as volatile at request of Sony.

 3.6 2001-01-08 major simplification to bat files.

 3.7 2001-01-08 treat 0A as volatile for cmoschk.

 3.8 2002-02-15 new mailing address

 3.9 2006-02-05 different pad directories
                explanation of extended CMOS

 4.0 2008-01-02 add PAD, icon, renaming.

 4.1 2008-09-21 clarify use of standand and extended CMOS in docs.

 4.3 2009-03-10 provide ANT build
                refactor into three separate programs with common includes.
                remove all BAT files.
                remove references to BAT files and automatic mode from documentation.
                more information on use with Vista/XP

 4.4 2009-08-05 make offsets 40, 41 and 42 volatile

 4.5 2009-08-11 fix bug in cmoschk that was making it misidentify volatile bytes. Introduced by recent code reordering.

 4.6 2009-08-20 refactor

 4.7 2012-11-25 minor changes to make compile

-30-

